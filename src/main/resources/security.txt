Аутентификация Authentication установление личности пользователя

Авторизация Authorization предоставление или ограничение доступа к ресурсам

Конфиденциальность Confidentiality только уполномоченные пользователи могут просматривать данные

Целостность Integrity данные не могут быть изменены без разрешения

Доступность Availability система работает и доступна в нужный момент

Аудит и отслеживаемость Auditability & Traceability кто что делал, когда и почему

Архитектура

SecurityFilterChain цепочка фильтров, обрабатывающих запросы
AuthenticationManager отвечает за проверку данных пользователя
AuthenticationProvider механизм, который фактически проводит проверку
UserDetailService компонент который загружает пользователя по имени пользователя
PasswortEncoder компонент для кодировки паролей (Bcrypt)
SecurityContentHolder глобальное хранилище, где лежит текущий пользователь запроса

HTTP Request --> SecurityFilterChain --> UsernamePasswordAuthFiler
--> AuthenticationManager --> AuthenticationProvider --> UserDetailService --> SecurityContentHolder

InMemory аутентификация храним пользователей и их роли в оперативной памяти приложения

JDBC Аутентификация используем SQL запросы без использования Spring Date или JPA или сущностей

JPA + Custom UserDetailService  подключаем полноценную обьектную модель пользователей с гибким управлением доступа

JWT Аутентификация  использование специального токена для проверки пользователя

JWT JSON WEB TOKEN способ передачи информацмм между клиентом и сервером без сохранения сессии на стороне сервера
Токен состоит:
Header алгоритм подписи HS512
Payload полезные данные, например имя пользователя
Singature подпись токена созданная с использованием секрета сервера


